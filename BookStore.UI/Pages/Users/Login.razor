@page "/users/login"
@inject IAuthenticationService authService
@inject NavigationManager navManager
<h3>Login</h3>

<div>
    <div class="card-body">
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
        <label for="email">Email Address</label>
        <InputText class="form-control" @bind-Value="LoginModel.Email"/>
        <ValidationMessage For="@(()=> LoginModel.Email)"/>
        </div>
        <div class="form-group">
        <label for="password">Password</label>
        <InputText class="form-control" type="password" @bind-Value="LoginModel.Password"/>
        <ValidationMessage For="@(()=> LoginModel.Password)"/>
        </div>  
        <button type="submit" class="btn btn-primary btn-block">Log in</button>
    </EditForm>
</div>
</div>

@code {
    UserLoginDTO LoginModel = new UserLoginDTO();
    string message = string.Empty;
    public async Task HandleLogin()
    {
        try
        {
            var response = await authService.AuthenticateAsync(LoginModel);

            if(response)
            {
                navManager.NavigateTo("/");
            }
            message = "Invalid Credentials, Please Try Again";
        }
        catch (ApiException ex)
        {
            if(ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {
                
            }
            message = ex.Message;
        }
    }
}
